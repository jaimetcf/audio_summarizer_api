from agents import Agent, function_tool
from pydantic import BaseModel
from openai import OpenAI
from settings import settings

# Pydantic model for Summary Reviewer output
class SummaryReviewerOutput(BaseModel):
    reviewed_summary: str
    corrections_made: str
    quality_score: int  # 1-10 scale
    improvement_notes: str

# Tool function for summary review and improvement
@function_tool
def review_and_improve_summary(transcript: str, template_content: str, original_summary: str) -> str:
    """Review and improve the original summary based on transcript and template using GPT-4"""
    try:
        openai_client = OpenAI(api_key=settings.OPENAI_API_KEY)
        review_prompt = f"""
        You are a senior report reviewer performing a peer review of a summary generated from an audio transcript.
        
        TASK: Review the original summary against the source transcript and template requirements, then create an improved version.
        
        SOURCE TRANSCRIPT:
        {transcript}
        
        TEMPLATE REQUIREMENTS:
        {template_content}
        
        ORIGINAL SUMMARY TO REVIEW:
        {original_summary}
        
        REVIEW INSTRUCTIONS:
        1. Analyze the original summary for:
           - Accuracy: Does it correctly represent the transcript content?
           - Completeness: Are important points from the transcript included?
           - Structure: Does it follow the template format properly?
           - Clarity: Is the language clear and professional?
           - Consistency: Are there any contradictions or inconsistencies?
        
        2. Identify specific issues and improvements needed
        
        3. Create an improved version that addresses all identified issues
        
        4. Provide a detailed analysis of what was corrected and why
        
        OUTPUT FORMAT:
        Return a JSON object with the following structure:
        {{
            "reviewed_summary": "The improved summary text",
            "corrections_made": "Detailed list of specific corrections and improvements made",
            "quality_score": 8,  // Score from 1-10 for the original summary
            "improvement_notes": "Professional analysis of the review process and key improvements"
        }}

        The score should be a number between 1 and 10.
        The reviewed summary should be in the same language as the original summary.
        All the content you need to create, listed above, should be in markdown format, except for the score.
        """
        
        response = openai_client.chat.completions.create(
            model="gpt-4.1",
            messages=[
                {"role": "system", "content": "You are a senior report reviewer with expertise in quality assurance and content improvement. Provide thorough, constructive feedback and create improved versions."},
                {"role": "user", "content": review_prompt}
            ],
            max_tokens=4000
        )
        
        return response.choices[0].message.content
    except Exception as e:
        raise Exception(f"Summary review failed: {str(e)}")

# Define the Summary Reviewer agent
summary_reviewer_agent = Agent(
    name="SummaryReviewer", 
    instructions="""You are a senior report reviewer performing peer review of summaries generated from audio transcripts.
    
    INPUT: You will receive three parameters:
    - transcript: The original audio transcript text
    - template_content: The template requirements for the summary
    - summary: The original summary generated by the summarizer agent
    
    OUTPUT: You must return a SummaryReviewerOutput object containing:
    - reviewed_summary: The improved version of the summary
    - corrections_made: Detailed list of specific corrections and improvements
    - quality_score: A score from 1-10 for the original summary quality
    - improvement_notes: Professional analysis of the review process
    
    All the content you need to create, listed above, should be in markdown format, except for the score.
    
    PROCESS:
    1. Thoroughly analyze the original summary against the transcript and template
    2. Identify accuracy, completeness, structure, clarity, and consistency issues
    3. Create an improved version that addresses all identified problems
    4. Provide detailed feedback on what was corrected and why
    5. Assign a quality score to the original work
    
    Use the review_and_improve_summary tool to perform the comprehensive review and generate the improved summary.""",
    tools=[review_and_improve_summary],
    output_type=SummaryReviewerOutput
)
